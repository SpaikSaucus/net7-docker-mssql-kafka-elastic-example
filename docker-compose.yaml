version: "3.9"
services:
  api:
    image: user_permissions
    container_name: api
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNET_ENV}
      - ConnectionStrings:DataBase=server=${DB_CONNECTIONSTRING}
      - ConnectionStrings:Elasticsearch=${ELASTIC_URI}
      - ConnectionStrings:Kafka=${KAFKA_URI}
      - AppSettings:ElasticsearchIndex=${ELASTIC_DEFAULT_INDEX}
      - AppSettings:ElasticsearchUsername=elastic
      - AppSettings:ElasticsearchPassword=${ELASTIC_PASSWORD}
      - AppSettings:KafkaTopic=${KAFKA_TOPIC}
    ports:
      - "8080:80"
    networks:
      myNetwork:
        ipv4_address: 11.5.0.3
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_STACK_VERSION}
    container_name: elastic
    environment:
      - node.name=es01
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - cluster.name=docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false #TODO: pending
    mem_limit: ${ELASTIC_MEM_LIMIT}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
    networks:
      myNetwork:
        ipv4_address: 11.5.0.4
networks:
  myNetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 11.5.0.0/16
          gateway: 11.5.0.1